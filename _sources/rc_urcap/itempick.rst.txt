ItemPick

This tutorial shows how to use the ItemPick Module with Roboception's
URCap.

Before we start

This tutorials assumes that the tutorial

Getting started with ItemPick

 has been completed, and the valid hand eye calibration has been
stored on the

rc_visard

 as described in

Hand-Eye Calibration

.

Overivew

The ItemPick functionality is available in the generic rc_visard node.
Please see

Generic rc_visard node

 in order to learn how to work with generic

rc_visard

 nodes.

The following functions are available for ItemPick:

ComputeGrasps: Triggers grasp computation

GetNextGrasp: Gets the next grasp after detection has been triggered

GetLCPose: Returns the pose of the detected load carrier.

ComputeGrasps


It is mandatory to set the minimum and maximum length and width of the
suction cup. If necessary enter a load carrier id and/or a region of
interest id, but it's not mandatory.

If the CollisionCheck license is available on the sensor it is also
possible to set the gripper and pre grasp offset for the collision
check.

Note: The region of interest and load carrier have to be defined in
  the Web GUI of the sensor. Only the regions of interest defined in
  'external' frame are shown in the URCap.

GetNextGrasp


This functions requires that ComputeGrasps has been triggered before.
It assigned the next available grasp pose and stores the pose in
PolyScope's variable format (e.g. p[-0.300517, -0.367119, -0.007997,
-0.001221, 3.116277, 0.038892]).

If no reachable grasp is detected and

Stop program when pose is not available

 checkbox is checked, popup will appear and the program will be
terminated. If the checkbox is not checked zero pose (p[0,0,0,0,0,0])
is returned.

Note: When the

  Stop program when pose is not available

   checkbox is unchecked, user has catch the case when nothing is
  detected (the zero pose (p[0,0,0,0,0,0]) is returned). If this
  situation is not handled, it might lead to collision or undefined
  robot behavior.

With the

'Pose orientation'

 drop down menu it is possible to change the strategy of calculating
the angle of the returned position. There are four different options
to choose from:

Last pose orientation Detected orientation is ignored, instead the
orientation of the last waypoint is used.

Only RZ from detected pose For RZ detected orientation is used, RX and
RY are based on the last waypoint orientation.

Only RX, RY from detected pose For RX RY detected orientation is used,
RZ is based on the last waypoint orientation.

Detected pose orientation The complete detected orientation is used.

GetBpLcPose


This function requires that DetectItems has been triggered with a load
carrier id. It returns the pose of the detected load carrier. If no
load carrier was detected, a zero pose (p[0,0,0,0,0,0]) is returned.

Note: When the

  Stop program when pose is not available

   checkbox is unchecked, user has catch the case when nothing is
  detected (the zero pose (p[0,0,0,0,0,0]) is returned). If this
  situation is not handled, it might lead to collision or undefined
  robot behavior.
