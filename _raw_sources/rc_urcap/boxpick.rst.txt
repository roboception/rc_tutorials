.. include:: ../global_rst.glb

BoxPick
========

This tutorial shows how to use the BoxPick Module with Roboception's URCap.

Before we start
---------------
This tutorials assumes that you are familiar with the :ref:`generic-rc-visard` and that a valid hand-eye calibration has been stored on the |rcvisard| as described in :ref:`ur-hand-eye`.

Overivew
------------
The boxpick functionality is available in the generic rc_visard node. Please see :ref:`generic-rc-visard` in order to learn how to work with generic |rcvisard| nodes.

The following functions are available for BoxPick:

* **ComputeGrasps:** Triggers detection of boxes

* **GetNextGrasp:** Gets the next grasp and size of a detected item after detection has been triggered

* **GetLCPose:** Returns the pose of the detected load carrier.


ComputeGrasps
---------------

.. figure:: ../images/urcap/bp_detect_items.png
  :width: 800px
  :align: center


It is mandatory to set the minimum and maximum length and width of the item model. If necessary enter a load carrier id and/or a region of interest id, but it's not mandatory.

If the CollisionCheck license is available on the sensor it is also possible to set the gripper and pre grasp offset for the collision check.

GetNextGrasp
-------------

.. figure:: ../images/urcap/bp_get_next_item.png
  :width: 800px
  :align: center

This functions requires that ComputeGrasps has been triggered before. It returns the next available item/box that was detected and stores the pose in PolyScope's variable format (e.g. p[-0.300517, -0.367119, -0.007997, -0.001221, 3.116277, 0.038892]).
If no box was detected, the call returns a zero pose (p[0,0,0,0,0,0]).
It also returns the size of the detected object in vector format (e.g. [0.04, 0.02] for a box with 4 x 2 centimeters)

If no reachable object is detected and **Stop program when pose is not available** checkbox is checked, popup will appear and the program will be terminated. If the checkbox is not checked zero pose (p[0,0,0,0,0,0]) is returned.

.. note::
  When the **Stop program when pose is not available** checkbox is unchecked, user has catch the case when nothing is detected (the zero pose (p[0,0,0,0,0,0]) is returned). If this situation is not handled, it might lead to collision or undefined robot behavior.

With the *'Pose orientation'* drop down menu it is possible to change the strategy of calculating the angle of the returned position.
There are three four options to choose from:

* **Last pose orientation** Detected orientation is ignored, instead the orientation of the last waypoint is used.
* **Only RZ from detected pose** For RZ detected orientation is used, RX and RY are based on the last waypoint orientation.
* **Only RX, RY from detected pose** For RX RY detected orientation is used, RZ is based on the last waypoint orientation.
* **Detected pose orientation** The complete detected orientation is used.

GetBpLcPose
-----------

.. figure:: ../images/urcap/bp_get_lc_pose.png
  :width: 800px
  :align: center

This function requires that ComputeGrasps has been triggered with a load carrier id. It returns the pose of the detected load carrier. If no load carrier was detected, a zero pose (p[0,0,0,0,0,0]) is returned.

.. note::
  When the **Stop program when pose is not available** checkbox is unchecked, user has catch the case when nothing is detected (the zero pose (p[0,0,0,0,0,0]) is returned). If this situation is not handled, it might lead to collision or undefined robot behavior.
