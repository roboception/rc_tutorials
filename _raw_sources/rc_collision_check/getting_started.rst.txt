.. include:: ../global_rst.glb

.. _collision_check_getting_started:

Getting started with |collision|
=================================

The |collision| module is integrated with the :doc:`rcvisard:itempick` modules, with
:doc:`rcvisard:silhouettematch`, and with :doc:`rccube:cadmatch`, but can also
be used as standalone product. In this tutorial we focus on setting the
parameters and checking collisions with the ItemPick module.

.. Warning::

   Collisions are checked only between the load carrier and the gripper, not
   the robot itself, the flange, other objects or the item located in the robot
   gripper. Only in combination with *SilhouetteMatch* or *CADMatch* and only
   in case the selected template contains a collision geometry and
   ``check_collisions_with_matches`` is enabled in the respective detection
   module, also collisions between the gripper and other *detected* objects are
   checked. Collisions with objects that cannot be detected will not be
   checked.


Before we start
---------------

In order to go through this tutorial, the following prerequisites should be met:

.. rubric:: The |rc_visard| is properly configured:

#. The |rc_visard|'s image version is at least 20.04 and the |rc_visard|'s license includes the
   |collision| and |itempick| components.
   This can be verified on the :ref:`sect-web-gui`'s *System* tab.

.. rubric:: The previous tutorial :ref:`collision_check_gripper_creation` has been completed.

.. note::
    The detection in the tutorial is done with the ItemPick module. To fully recreate it, it is necessary to have the
    ItemPick module available on the sensor and be able to run the detection as described in :ref:`itempick-bin-picking-no-robot`.
    However, reading it will give useful insights also for people who use it with other detection modules or as a standalone module.

Checking collisions
---------------------

.. Note::
  To show the results of the |collision| module, we will use the *Try Out* section of the |itempick| module's :ref:`sect-web-gui`.
  More details on how to use |collision|
  with other modules are available in their tutorials and the manual. For using |collision| as a standalone product
  check the :doc:`rcvisard:collisioncheck` manual.

After the gripper and parameters are configured, filtering out the colliding grasps is quite straight forward. In the *Try Out* section of the
|webgui|'s |itempick| tab, we choose "Grasp Point Detection" as detection type. Then we define the suction surface width and height corresponding
to the real dimensions of the gripper's suction cup. After that, we choose the load carrier and gripper as shown on :numref:`fig-collision-tryout`.

After clicking on the "Detect Grasp Points" button, only the collision-free grasps are returned.

.. _fig-collision-tryout:
.. figure:: ../images/collisioncheck/try_out_ip_collision.png
   :width: 700px
   :align: center

   ItemPick tryout section

In the visualization images the colliding grasps are drawn as red points and black ellipses as shown in
:numref:`fig-collision-tryout-results`, but will not be listed in the 'Result of Grasp Point Detection' section.
To get all detected grasps it is necessary to run the detection without the collision check, i.e. without selecting a gripper.

.. _fig-collision-tryout-results:
.. figure:: ../images/collisioncheck/grasp_points_collision_check.jpg
   :width: 400px
   :align: center

   Grasps on the tilted objects close to the load carrier walls are marked as colliding

Setting a pre-grasp offset
..........................

The ``pre_grasp_offset`` argument on the |webgui|'s ItemPick and BoxPick tabs can be used for additionally
checking if the gripper is in collision with
the load carrier at any point during a linear motion from the pre-grasp position to the grasp position.
The pre-grasp offset is the offset from the grasp position to the pre-grasp position in the grasp's coordinate frame.
If this value is set to (0,0,0), collisions will only be checked at the grasp points.

.. _fig-collision-pre_grasp_offset:
.. figure:: ../images/collisioncheck/pre_grasp_offset.png
   :width: 500px
   :align: center

   This grasp would be marked as colliding. The gripper collides with the load carrier during movement from the
   pre-grasp position to the grasp position.


Configuring parameters
-----------------------

The parameters for collision checking are set in the |webgui|'s |collision| tab or via the |rest-api| interface,
no matter if the module is used as a standalone product or as a part of the ItemPick or BoxPick modules.
Details are given in the manual in :ref:`sect-collisioncheck-parameters`.

.. _collision-check_collision_distance:

Collision Distance
..................

    The ``collision_distance`` parameter is the minimal distance in meters between any part of the gripper geometry and any of the
    load carrierâ€™s walls for a grasp to be considered collision free. :numref:`fig-collision-collision_distance`
    visualizes this distance. This parameter should be increased if the module returns valid grasps too close to the load carrier's walls.
    If, on the other hand, valid grasps near the load carrier's walls are rejected, this value should be decreased.

    .. _fig-collision-collision_distance:
    .. figure:: ../images/collisioncheck/collision_distance.png
       :width: 300px
       :align: center

       The minimal distance between the gripper geometry and the load carrier's walls is :math:`d`.

.. _collision_check_check_flange:

Check Flange
............

    The ``check_flange`` parameter is used to activate an additional safety check to prevent collisions between the load carrier and the
    robot body. If this check is active, grasps where any part of robot flange is inside the load carrier are marked as colliding. For this functionality
    to work properly it is necessary to correctly set the flange radius during the gripper creation (see :ref:`collision_check_flange_radius`).

    .. _fig-collision-check_flange:
    .. figure:: ../images/collisioncheck/check_flange.png
       :width: 700px
       :align: center

       Case A would be marked as collision only if ``check_flange`` is true. Case B is collision free.

.. _collision_check_check_bottom:

Check Bottom
.................
    When this check is enabled, the collisions will be checked not only with the side walls of the load carrier but also with its bottom.

    If the TCP of the gripper is inside the collision geometry (e.g. for suction cups), it might happen that the grasp points close to the load
    carrier bottom are marked as colliding. To prevent this from happening, collisions with the load carrier bottom can be disabled by setting
    the ``check_bottom`` parameter to false. This parameter should only be disabled if it is safe to assume that such collisions will not happen.
    We do not recommend to switch it off for large grippers that might collide with the bottom of the load carrier when they are tilted.


Troubleshooting
---------------

* :ref:`A grasp close to the bottom of the load carrier is marked as colliding<collision-faq-grasp-bottom>`
